plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0-M2'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.xtremehiphopwithtash'
version = '1.0.0'

java {
  sourceCompatibility = '20'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.stripe:stripe-java:23.2.0'
	implementation 'com.graphql-java:graphql-java-extended-scalars:20.0'
	implementation 'com.graphql-java:graphql-java-extended-validation:20.0'
	implementation 'com.auth0:auth0:2.1.0'
	implementation 'com.google.openlocationcode:openlocationcode:1.0.4'
	implementation 'com.google.code.findbugs:jsr305:3.0.2'
	implementation 'com.google.maps:google-maps-services:2.2.0'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.15.2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootJar') {
	launchScript()
}

bootJar {
	archiveFileName = 'book.jar'
}

compileJava {
	exclude "build"
}
